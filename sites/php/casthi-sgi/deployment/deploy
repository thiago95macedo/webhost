#!/bin/bash
# Script Principal de Deploy - CasThi SGI
# Uso: ./deploy [comando]

DEPLOY_DIR="deployment"
SCRIPTS_DIR="$DEPLOY_DIR/scripts"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo -e "${BLUE}=== DEPLOY CASTHI SGI ===${NC}"
    echo ""
    echo -e "${GREEN}Comandos dispon√≠veis:${NC}"
    echo "  deploy    - Fazer deploy para cliente"
    echo "  clients   - Gerenciar clientes"
    echo "  logs      - Ver logs de deploy"
    echo "  help      - Mostrar esta ajuda"
    echo ""
    echo -e "${YELLOW}Exemplos:${NC}"
    echo "  ./deploy deploy    # Fazer deploy"
    echo "  ./deploy clients   # Gerenciar clientes"
    echo "  ./deploy logs      # Ver logs"
    echo ""
}

# Fun√ß√£o para verificar se o diret√≥rio existe
check_deploy_dir() {
    if [ ! -d "$DEPLOY_DIR" ]; then
        echo -e "${RED}‚ùå Diret√≥rio deployment n√£o encontrado!${NC}"
        echo "Execute: mkdir -p deployment/{scripts,config,logs}"
        exit 1
    fi
}

# Fun√ß√£o para fazer deploy
do_deploy() {
    check_deploy_dir
    
    if [ ! -f "$SCRIPTS_DIR/deploy-advanced.php" ]; then
        echo -e "${RED}‚ùå Script de deploy n√£o encontrado!${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}üöÄ Iniciando deploy...${NC}"
    php "$SCRIPTS_DIR/deploy-advanced.php"
}

# Fun√ß√£o para gerenciar clientes
manage_clients() {
    check_deploy_dir
    
    if [ ! -f "$SCRIPTS_DIR/manage-clients.php" ]; then
        echo -e "${RED}‚ùå Script de gerenciamento n√£o encontrado!${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}üë• Gerenciando clientes...${NC}"
    php "$SCRIPTS_DIR/manage-clients.php"
}

# Fun√ß√£o para ver logs
show_logs() {
    check_deploy_dir
    
    LOGS_DIR="$DEPLOY_DIR/logs"
    
    if [ ! -d "$LOGS_DIR" ]; then
        echo -e "${RED}‚ùå Diret√≥rio de logs n√£o encontrado!${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}üìã Logs dispon√≠veis:${NC}"
    echo ""
    
    if [ -z "$(ls -A $LOGS_DIR 2>/dev/null)" ]; then
        echo -e "${YELLOW}Nenhum log encontrado${NC}"
    else
        for log in "$LOGS_DIR"/*.log; do
            if [ -f "$log" ]; then
                filename=$(basename "$log")
                size=$(du -h "$log" | cut -f1)
                echo -e "${BLUE}üìÑ $filename${NC} ($size)"
            fi
        done
        
        echo ""
        echo -e "${YELLOW}Para ver um log espec√≠fico:${NC}"
        echo "tail -f $LOGS_DIR/deploy-YYYY-MM-DD.log"
    fi
}

# Verificar se PHP est√° dispon√≠vel
check_php() {
    if ! command -v php &> /dev/null; then
        echo -e "${RED}‚ùå PHP n√£o encontrado!${NC}"
        echo "Instale o PHP para usar o sistema de deploy"
        exit 1
    fi
}

# Main
main() {
    check_php
    
    case "${1:-help}" in
        "deploy")
            do_deploy
            ;;
        "clients")
            manage_clients
            ;;
        "logs")
            show_logs
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            echo -e "${RED}‚ùå Comando inv√°lido: $1${NC}"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Executar main
main "$@"
